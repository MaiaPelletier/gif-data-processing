#45-10-0014-01
# CIF 5.3.1 ---------------------------------------------------------------
# load libraries
library(dplyr)
library(tidyr)
library(cansim)
library(readr)
library(stringr)
# load CODR table from stc api
Raw_data <- get_cansim("45-10-0014-01", factors = FALSE)
# load geocode
geocodes <- read_csv("geocodes.csv")
setwd("F:/Open SDG/gif-data-processing")
#45-10-0014-01
# CIF 5.3.1 ---------------------------------------------------------------
# load libraries
library(dplyr)
library(tidyr)
library(cansim)
library(readr)
library(stringr)
# load CODR table from stc api
Raw_data <- get_cansim("45-10-0014-01", factors = FALSE)
# load geocode
geocodes <- read_csv("geocodes.csv")
View(Raw_data)
distinct(Raw_data, REF_DATE)
distinct(Raw_data, GEO)
distinct(Raw_data, `Activity group`)
print(n = 16)
print(distinct(Raw_data, `Activity group`), n = 16)
print(distinct(Raw_data, `Activity group`), n = 26)
print(distinct(Raw_data, `Age group`), n = 26)
print(distinct(Raw_data, Sex), n = 26)
domestic_care <-
Raw_data %>%
filter(`Activity group` %in% c("Unpaid work activities",
"Household chores",
"Care of household children under 18 years",
"Care of household adults",
"Shopping for goods and services"),
Statistics == "Proportion of day, population") %>%
select(Year = REF_DATE,
Geography = GEO,
`Activity group`,
Age = `Age group`,
Sex,
Value = VALUE) %>%
left_join(geocodes, by = "Geography") %>%
relocate(GeoCode, .before = Value)
View(domestic_care)
final_data <-
domestic_care %>%
mutate_at(2:(ncol(.)-2), ~ paste0("data.", .x))
View(final_data)
names(final_data)[2:(ncol(final_data)-2)] <-
paste0("data.", names(final_data)[2:(ncol(final_data)-2)])
View(final_data)
domestic_care <-
Raw_data %>%
filter(`Activity group` %in% c("Unpaid work activities",
"Household chores",
"Care of household children under 18 years",
"Care of household adults",
"Shopping for goods or services"),
Statistics == "Proportion of day, population") %>%
select(Year = REF_DATE,
Geography = GEO,
`Activity group`,
Age = `Age group`,
Sex,
Value = VALUE) %>%
left_join(geocodes, by = "Geography") %>%
relocate(GeoCode, .before = Value)
final_data <-
domestic_care %>%
mutate_at(2:(ncol(.)-2), ~ paste0("data.", .x))
names(final_data)[2:(ncol(final_data)-2)] <-
paste0("data.", names(final_data)[2:(ncol(final_data)-2)])
View(final_data)
Raw_data3 < get_cansim("37-10-0208-01", factors = FALSE)
write_csv(final_data, "CIF/data/indicator_5-3-1.csv", na = "")
#38-10-0250-01
# CIF 6.3.1 ---------------------------------------------------------------
# load libraries
library(dplyr)
library(tidyr)
library(cansim)
library(readr)
# load CODR table from stc api
Raw_data <- get_cansim("38-10-0250-01", factors = FALSE)
# load geocode
geocodes <- read_csv("geocodes.csv")
setwd("F:/Open SDG/gif-data-processing")
#38-10-0250-01
# CIF 6.3.1 ---------------------------------------------------------------
# load libraries
library(dplyr)
library(tidyr)
library(cansim)
library(readr)
# load CODR table from stc api
Raw_data <- get_cansim("38-10-0250-01", factors = FALSE)
# load geocode
geocodes <- read_csv("geocodes.csv")
View(Raw_data)
distinct(Raw_data, Sector)
print(distinct(Raw_data, Sector), n = 92)
print((3128899-3506234)/3506234)
print(round(3128899-3506234)/3506234),1)
print(round((3128899-3506234)/3506234),1)
?round
print(round((3128899-3506234)/3506234))
print((3128899-3506234)/3506234)
print(round(((3128899-3506234)/3506234), digits = 1))
print(round(((3128899-3506234)/3506234), digits = 3))
print(round((((3128899-3506234)/3506234)*100), digits = 3))
print(round((((3128899-3506234)/3506234)*100), digits = 1))
print((36451889 - 37457754)/37457754)
print(round((36451889 - 37457754)/37457754), digits = 3)
print(round(((36451889 - 37457754)/37457754), digits = 3))
print(round((((36451889 - 37457754)/37457754)*100), digits = 1))
Raw_data2 <- get_cansim("37-10-0117-01", factors = FALSE)
indg_pop1 <-
Raw_data2 %>%
mutate(across(`Educational attainment level`, str_replace, "College","Short-cycle tertiary")) %>%
filter(REF_DATE >= 2010,
`Population characteristics` == "Off-reserve Indigenous  population",
`Educational attainment level` %in% c("Short-cycle tertiary", "University")) %>%
select(Year = REF_DATE, Geography = GEO,
`Population characteristics`, `Educational attainment level`,
Value = VALUE) %>%
group_by(Year, Geography, `Population characteristics`, `Educational attainment level`) %>%
summarise(Value = sum(Value, na.rm = TRUE)) %>%
pivot_wider(names_from = `Educational attainment level`, values_from = Value)
library(dplyr)
library(tidyr)
library(cansim)
library(readr)
library(stringr)
indg_pop1 <-
Raw_data2 %>%
mutate(across(`Educational attainment level`, str_replace, "College","Short-cycle tertiary")) %>%
filter(REF_DATE >= 2010,
`Population characteristics` == "Off-reserve Indigenous  population",
`Educational attainment level` %in% c("Short-cycle tertiary", "University")) %>%
select(Year = REF_DATE, Geography = GEO,
`Population characteristics`, `Educational attainment level`,
Value = VALUE) %>%
group_by(Year, Geography, `Population characteristics`, `Educational attainment level`) %>%
summarise(Value = sum(Value, na.rm = TRUE)) %>%
pivot_wider(names_from = `Educational attainment level`, values_from = Value)
View(indg_pop1)
print(406756801/640327058)
#25-10-0020-01
# CIF 6.3.1 ---------------------------------------------------------------
# load libraries
library(dplyr)
library(tidyr)
library(cansim)
library(readr)
# load CODR table from stc api
Raw_data <- get_cansim("25-10-0020-01", factors = FALSE)
# load geocode
geocodes <- read_csv("geocodes.csv")
View(Raw_data)
renewable <-
Raw_data %>%
filter(`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` %in% c("Total hydro, tidal, wind, solar and other generation",
"Hydraulic turbine",
"Tidal power turbine",
"Wind power turbine",
"Solar",
"Other types of electricity generation")) %>%
select(Year = REF_DATE,
Geography = GEO,
`Type of electricity generation`,
Value = VALUE)
View(Raw_data)
View(renewable)
renewable <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` %in% c("Total hydro, tidal, wind, solar and other generation",
"Hydraulic turbine",
"Tidal power turbine",
"Wind power turbine",
"Solar",
"Other types of electricity generation")) %>%
select(Year = REF_DATE,
Geography = GEO,
`Type of electricity generation`,
Value = VALUE)
View(renewable)
renewable <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` %in% c("Total hydro, tidal, wind, solar and other generation",
"Hydraulic turbine",
"Tidal power turbine",
"Wind power turbine",
"Solar",
"Other types of electricity generation",
)) %>%
select(Year = REF_DATE,
Geography = GEO,
`Type of electricity generation`,
Value = VALUE)
renewable <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` %in% c("Total hydro, tidal, wind, solar and other generation",
"Hydraulic turbine",
"Tidal power turbine",
"Wind power turbine",
"Solar",
"Other types of electricity generation"
)) %>%
select(Year = REF_DATE,
Geography = GEO,
`Type of electricity generation`,
Value = VALUE)
total_electricty <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricty producer",
`Type of electricty generation` == "Total all types of electricity generation") %>%
select(GEO, `Type of electricity generation`, `Total generation` = VALUE)
total_electricty <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricty producer",
`Type of electricity generation` == "Total all types of electricity generation") %>%
select(GEO, `Type of electricity generation`, `Total generation` = VALUE)
View(total_electricty)
total_electricty <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` == "Total all types of electricity generation") %>%
select(GEO, `Type of electricity generation`, `Total generation` = VALUE)
View(total_electricty)
total_electricty <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` == "Total all types of electricity generation") %>%
select(Year = REF_DATE. Geography = GEO, `Type of electricity generation`, `Total generation` = VALUE)
total_electricty <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` == "Total all types of electricity generation") %>%
select(Year = REF_DATE, Geography = GEO, `Type of electricity generation`, `Total generation` = VALUE)
View(total_electricty)
renewable <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` %in% c("Total hydro, tidal, wind, solar and other generation",
"Hydraulic turbine",
"Tidal power turbine",
"Wind power turbine",
"Solar",
"Other types of electricity generation"
)) %>%
select(Year = REF_DATE,
Geography = GEO,
`Type of electricity generation`,
Value = VALUE) %>%
left_join(total_electricty, by = c("Year", "Geography"))
View(renewable)
renewable <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` %in% c("Total hydro, tidal, wind, solar and other generation",
"Hydraulic turbine",
"Tidal power turbine",
"Wind power turbine",
"Solar",
"Other types of electricity generation"
)) %>%
select(Year = REF_DATE,
Geography = GEO,
`Type of electricity generation`,
`total renewable` = VALUE) %>%
left_join(total_electricty, by = c("Year", "Geography"))
View(renewable)
renewable <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` %in% c("Total hydro, tidal, wind, solar and other generation",
"Hydraulic turbine",
"Tidal power turbine",
"Wind power turbine",
"Solar",
"Other types of electricity generation"
)) %>%
select(Year = REF_DATE,
Geography = GEO,
`Type of electricity generation`,
`total renewable` = VALUE) %>%
left_join(total_electricty, by = c("Year", "Geography")) %>%
mutate(Value = round((`total renewable` / `Total generation`), digits = 3))
View(renewable)
renewable <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` %in% c("Total hydro, tidal, wind, solar and other generation",
"Hydraulic turbine",
"Tidal power turbine",
"Wind power turbine",
"Solar",
"Other types of electricity generation"
)) %>%
select(Year = REF_DATE,
Geography = GEO,
`Type of electricity generation`,
`total renewable` = VALUE) %>%
left_join(total_electricty, by = c("Year", "Geography")) %>%
mutate(Value = round(((`total renewable` / `Total generation`), digits = 3)*100))
renewable <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` %in% c("Total hydro, tidal, wind, solar and other generation",
"Hydraulic turbine",
"Tidal power turbine",
"Wind power turbine",
"Solar",
"Other types of electricity generation"
)) %>%
select(Year = REF_DATE,
Geography = GEO,
`Type of electricity generation`,
`total renewable` = VALUE) %>%
left_join(total_electricty, by = c("Year", "Geography")) %>%
mutate(Value = round(((`total renewable` / `Total generation`)*100), digits = 3))
View(renewable)
renewable <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` %in% c("Total hydro, tidal, wind, solar and other generation",
"Hydraulic turbine",
"Tidal power turbine",
"Wind power turbine",
"Solar",
"Other types of electricity generation"
)) %>%
select(Year = REF_DATE,
Geography = GEO,
`Type of electricity generation`,
`total renewable` = VALUE) %>%
left_join(total_electricty, by = c("Year", "Geography")) %>%
mutate(Value = round(((`total renewable` / `Total generation`)*100), digits = 3)) %>%
select(Year, Geography, `Type of electricity generation`, Value)
renewable <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` %in% c("Total hydro, tidal, wind, solar and other generation",
"Hydraulic turbine",
"Tidal power turbine",
"Wind power turbine",
"Solar",
"Other types of electricity generation"
)) %>%
select(Year = REF_DATE,
Geography = GEO,
`Type of electricity generation`,
`total renewable` = VALUE) %>%
left_join(total_electricty, by = c("Year", "Geography")) %>%
mutate(Value = round(((`total renewable` / `Total generation`)*100), digits = 3)) %>%
select(Year,
Geography,
`Type of electricity generation` =`Type of electricty generation.x`,
Value)
renewable <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` %in% c("Total hydro, tidal, wind, solar and other generation",
"Hydraulic turbine",
"Tidal power turbine",
"Wind power turbine",
"Solar",
"Other types of electricity generation"
)) %>%
select(Year = REF_DATE,
Geography = GEO,
`Type of electricity generation`,
`total renewable` = VALUE) %>%
left_join(total_electricty, by = c("Year", "Geography")) %>%
mutate(Value = round(((`total renewable` / `Total generation`)*100), digits = 3)) %>%
select(Year,
Geography,
`Type of electricity generation` =`Type of electricity generation.x`,
Value)
View(renewable)
renewable <-
Raw_data %>%
filter(REF_DATE >= 2015,
`Class of electricity producer` == "Total all classes of electricity producer",
`Type of electricity generation` %in% c("Total hydro, tidal, wind, solar and other generation",
"Hydraulic turbine",
"Tidal power turbine",
"Wind power turbine",
"Solar",
"Other types of electricity generation"
)) %>%
select(Year = REF_DATE,
Geography = GEO,
`Type of electricity generation`,
`total renewable` = VALUE) %>%
left_join(total_electricty, by = c("Year", "Geography")) %>%
mutate(Value = round(((`total renewable` / `Total generation`)*100), digits = 3)) %>%
select(Year,
Geography,
`Type of electricity generation` =`Type of electricity generation.x`,
Value) %>%
left_join(geocodes, by = "Geography") %>%
relocate(GeoCode, .before = Value)
View(renewable)
total_line <-
renewable %>%
filter(Geography == "Canada",
`Type of electricity generation` == "Total hydro, tidal, wind, solar and other generation",
) %>%
mutate_at(2:(ncol(.)-2), ~ "")
non_total_line <-
renewable %>%
filter(!(Geography == "Canada" &
`Type of electricity generation` == "Total hydro, tidal, wind, solar and other generation"
)) %>%
mutate_at(2:(ncol(.)-2). ~paste0("data.", .x))
non_total_line <-
renewable %>%
filter(!(Geography == "Canada" &
`Type of electricity generation` == "Total hydro, tidal, wind, solar and other generation"
)) %>%
mutate_at(2:(ncol(.)-2), ~ paste0("data.", .x))
final_data <-
bind_rows(total_line, non_total_line)
View(final_data)
paste0("data.", names(final_data)[2:(ncol(final_data)-2))
names(final_data)[2:(ncol(final_data)-2)] <-
paste0("data.", names(final_data)[2:(ncol(final_data)-2)])
View(final_data)
write_csv(final_data, "CIF/data/indicator_7-3-1.csv", na = "")
